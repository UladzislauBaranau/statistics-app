name: ci

on: [ push, pull_request ]

env:
  REGISTRY: ghcr.io

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    name: Docker image!!!

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to docker hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-multi-buildx

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: ../
          file: docker/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/uladzislaubaranau/statistics-app:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  linters-and-tests:
    needs: build-docker-image
    runs-on: ubuntu-latest
    name: Linters & tests

    services:
      statistics-pg:
        image: postgres:14.5
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    container:
      image: ghcr.io/uladzislaubaranau/statistics-app:latest
      options: --user root
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Code quality checks
        run: |
          black --check .
          isort --check-only --profile black .
      - name: Run unit tests
        run: pipenv run pytest src/tests/unit

      - name: Run integration tests
        run: pipenv run pytest src/tests/integration
